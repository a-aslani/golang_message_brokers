version: "3.9"

networks:
    app_network:
        driver: bridge

volumes:
    mongodb_data:
    redis_db:

services:

    reverse-proxy:
        image: nginx:alpine
        volumes:
            - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf:ro
        ports:
            - "8888:80"
        environment:
            - NGINX_HOST=domain.com
            - NGINX_PORT=80
        depends_on:
            - user_service
        networks:
            - app_network

    mongo:
        image: mongo
        restart: always
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: example
        ports:
            - "27017:27017"
        volumes:
            - mongodb_data:/data/db
        networks:
            - app_network

    mongo-express:
        image: mongo-express
        restart: always
        ports:
            - "7071:8081"
        environment:
            ME_CONFIG_MONGODB_AUTH_DATABASE: "message_brokers"
            ME_CONFIG_MONGODB_AUTH_USERNAME: admin
            ME_CONFIG_MONGODB_AUTH_PASSWORD: pass
            ME_CONFIG_MONGODB_ADMINUSERNAME: root
            ME_CONFIG_MONGODB_ADMINPASSWORD: example
            ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
        networks:
            - app_network

    redis:
        image: redis
        container_name: redis
        hostname: redis
        networks:
            - app_network
        volumes:
            - redis_db:/data
        ports:
            - "6379:6379"
        entrypoint: redis-server --appendonly yes
        restart: always

    swagger:
        container_name: swagger
        build: .
        entrypoint: "./golang_message_brokers swagger"
        environment:
            - CONFIG_FILE=config.prod.yml
            - GIN_MODE=release
        networks:
            - app_network

    user_service:
        container_name: user_service
        build: .
        entrypoint: "./golang_message_brokers user"
        depends_on:
            - mongo
        environment:
            - CONFIG_FILE=config.prod.yml
            - GIN_MODE=release
        networks:
            - app_network
